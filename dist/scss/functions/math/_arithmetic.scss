

// ============================================================================
// UNITLESS ARITHMETIC FUNCTIONS
// ============================================================================
//
// These functions allow for arithmetic operations on values with or without 
// units, ensuring compatibility and proper handling of CSS units. When units 
// are mismatched, a warning is issued, and the operation returns null.
//
// Functions:
// - add: Adds two values, handling units appropriately.
// - subtract: Subtracts one value from another, with unit handling.
//
// ============================================================================

/// Adds two values, handling units appropriately.
/// 
/// This function performs arithmetic addition on two values, ensuring that
/// units are properly handled. If both values are unitless, they are added directly.
/// If one value has a unit and the other is unitless, the unitless value is 
/// treated as having the same unit as the other value. If both values have 
/// units, they must be the same unit; otherwise, a warning is issued and 
/// `null` is returned.
/// 
/// @param {Number} $value1 - The first value, which may or may not include units.
/// @param {Number} $value2 - The second value, which may or may not include units.
/// @return {Number} - The sum of the two values, or null if the units are incompatible.
@function add($value1, $value2) {
    @if unitless($value1) and unitless($value2) {
        @return $value1 + $value2;
    } @else if unitless($value1) {
        @return $value1 + unit-strip($value2);
    } @else if unitless($value2) {
        @return unit-strip($value1) + $value2;
    } @else if unit($value1) == unit($value2) {
        @return $value1 + $value2;
    } @else {
        @warn "Cannot add values with different units: #{$value1} and #{$value2}";
        @return null;
    }
}

///
/// Subtracts one value from another, handling units appropriately.
/// 
/// This function performs arithmetic subtraction on two values, ensuring that
/// units are properly handled. If both values are unitless, they are subtracted directly.
/// If one value has a unit and the other is unitless, the unitless value is 
/// treated as having the same unit as the other value. If both values have 
/// units, they must be the same unit; otherwise, a warning is issued and 
/// `null` is returned.
/// 
/// @param {Number} $value1 - The first value, which may or may not include units.
/// @param {Number} $value2 - The second value, which may or may not include units.
/// @return {Number} - The difference between the two values, or null if the units are incompatible.
/// 
@function subtract($value1, $value2) {
    @if unitless($value1) and unitless($value2) {
        @return $value1 - $value2;
    } @else if unitless($value1) {
        @return $value1 - unit-strip($value2);
    } @else if unitless($value2) {
        @return unit-strip($value1) - $value2;
    } @else if unit($value1) == unit($value2) {
        @return $value1 - $value2;
    } @else {
        @warn "Cannot subtract values with different units: #{$value1} and #{$value2}";
        @return null;
    }
}