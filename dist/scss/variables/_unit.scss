// ============================================================================
// Poster
// ============================================================================

////
///
/// Unit Variables Module
/// ===========================================================================
///
/// This module defines a responsive typography system using the Kyū
/// measurement system. The system is based on the rem unit and provides
/// utility functions and mixins to apply fluid typography across various
/// screen sizes.
///
/// Dependencies:
/// - view: For viewport-related variables.
/// - functions: For utility functions such as `unit_strip`.
///
/// @group Unit
/// @author Scape Agency
/// @link https://unit.gl
/// @since 0.1.0 initial release
/// @todo None
/// @access public
///
////


// ============================================================================
// Use
// ============================================================================

@use "sass:math";
@use "view" as *;
@use "../functions" as *;

// ============================================================================
// Variables
// ============================================================================

///
/// The base unit in the Kyū measurement system. It represents 1/16th of a rem,
/// which is equivalent to 1px or 0.25mm.
///
/// @name $q
/// @type Length
///
$q: 0.0625rem !default; // 1px, or 0.25mm

///
/// The minimum Kyū size used for fluid typography.
///
/// @type Length
/// @name $q_min
///
$q_min: 0.75px !default;

///
/// The maximum Kyū size used for fluid typography.
///
/// @type Length
/// @name $q_max
$q_max: 1.5px !default;

///
/// The minimum font size calculated using the minimum Kyū size, based on
/// the rem unit.
///
/// @type Length
/// @name $font_min
///
$font_min: calc((1rem / $q) * $q_min) !default;

///
/// The maximum font size calculated using the maximum Kyū size, based on
/// the rem unit.
///
/// @type Length
/// @name $font_max
$font_max: calc((1rem / $q) * $q_max) !default;

///
/// This function returns a calculated value in Kyū units, making it easy to
/// apply multiples of the base unit.
///
/// @name q
/// @param {Number} $multiplier - The multiplier to apply to the base Kyū unit.
/// @return {Length} The calculated value in Kyū units.
///
@function q($multiplier) {
    @return calc($q * $multiplier);
}
