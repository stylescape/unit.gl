// ============================================================================
// Poster
// ============================================================================

////
/// 
/// Unit Functions Module
/// ===========================================================================
/// 
/// @group Unit
/// @author Scape Agency
/// @link https://unit.gl
/// @since 0.1.0 initial release
/// @todo None
/// @access public
/// 
////


// ============================================================================
// Use
// ============================================================================


// ============================================================================
// Functions
// ============================================================================





/// Unit Conversion Functions
/// ---------------------------------------------------------------------------
/// Create functions to convert between different measurement units, such as
/// pixels to rem, em to pixels, etc.

@function px-to-rem($size, $base: 16px) {
    @return $size / $base * 1rem;
}

@function rem-to-px($size, $base: 16px) {
    @return $size * $base;
}

@function em-to-px($size, $context: 16px) {
    @return $size * $context;
}

@function px-to-em($size, $context: 16px) {
    @return $size / $context * 1em;
}


/// Base font-size for the document
$base-font-size: 16px !default;

/// Validate that the input is a pixel value
@function validate-px($value) {
    @if unit($value) != 'px' {
        @error "Expected a pixel value, but got `#{$value}`.";
    }
    @return $value;
}

/// Convert pixels to rem
@function px-to-rem($size) {
    $validated-size: validate-px($size);
    @return $validated-size / $base-font-size * 1rem;
}

/// Convert rem to pixels
@function rem-to-px($size) {
    @if unit($size) != 'rem' {
        @error "Expected a rem value, but got `#{$size}`.";
    }
    @return $size * $base-font-size;
}

/// Convert em to pixels
@function em-to-px($size, $context: $base-font-size) {
    $validated-context: validate-px($context);
    @if unit($size) != 'em' {
        @error "Expected an em value, but got `#{$size}`.";
    }
    @return $size * $validated-context;
}

/// Convert pixels to em
@function px-to-em($size, $context: $base-font-size) {
    $validated-size: validate-px($size);
    $validated-context: validate-px($context);
    @return $validated-size / $validated-context * 1em;
}
