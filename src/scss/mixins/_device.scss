// ============================================================================
// Poster
// ============================================================================

////
/// 
/// Device Mixins Module
/// ===========================================================================
/// 
/// @group Device
/// @author Scape Agency
/// @link https://unit.gl
/// @since 0.1.0 initial release
/// @todo None
/// @access public
/// 
////


// ============================================================================
// Use
// ============================================================================

@use "../functions" as *;
@use "../variables" as *;
@use "../maps" as *;


// ============================================================================
// Mixins
// ============================================================================


/// 
/// Creates a media query based on device attributes defined in the `$devices`
/// map. The media query supports min-width, max-width, and pixel-ratio.
/// 
/// @name device_media_query
/// @param {String} $device - The key name of the device in the $devices map.
/// @content Styles to be applied within the media query.
/// 
/// @example scss - Usage
///     @include device-media-query('iphone-6') {
///         // Styles specific to iPhone 6
///     }
/// 
@mixin device_media_query(
    $device
) {
    // Retrieve the device attributes from the $devices map
    $attributes: map-get($devices, $device);

    // Validate that the device exists in the $devices map
    @if $attributes == null {
        @warn "Device `#{$device}` not found in $devices map.";
        // @return;
    }

    // Extract individual attributes with default fallbacks
    $min-width: map-get($attributes, "min-width");
    $max-width: map-get($attributes, "max-width");
    $pixel-ratio: map-get($attributes, "pixel-ratio", 1); // Default to 1

    // Construct the media query string
    $media-query: "only screen";

    @if $min-width != null {
        $media-query: "#{$media-query} and (min-width: #{$min-width})";
    }

    @if $max-width != null {
        $media-query: "#{$media-query} and (max-width: #{$max-width})";
    }

    @if $pixel-ratio != 1 {
        $media-query: "#{$media-query} and (-webkit-device-pixel-ratio: #{$pixel-ratio})";
        $media-query: "#{$media-query} and (min-resolution: #{($pixel-ratio * 96)}dpi)";
    }

    // Apply the media query
    @media #{$media-query} {
        @content;
    }
}

