// ============================================================================
// Poster
// ============================================================================

////
///
/// Helper Mixins Module
/// ===========================================================================
///
/// This module provides a collection of utility mixins for common CSS
/// properties like width, height, font size, padding, margin, and border
/// properties. These mixins leverage a `q()` function (presumably defined
/// elsewhere) to standardize the application of units across the project,
/// promoting consistency and scalability.
///
/// @group Helper
/// @author Scape Agency
/// @link https://unit.gl
/// @since 0.1.0 initial release
/// @todo None
/// @access public
///
////

// ============================================================================
// Use
// ============================================================================

@use "../functions" as *;
@use "../variables" as *;
@use "../maps" as *;

// ============================================================================
// Mixins
// ============================================================================

// Dimensions
// ============================================================================

///
/// Sets the width of an element using the provided value.
///
/// @name set_width
/// @group Dimensions
/// @param {Length} $value - The width value to apply.
///
/// @example scss - Usage
///   .box {
///     @include set_width(100px);
///   }
///
@mixin set_width($value) {
    @include q($value, width);
}

///
/// Sets the height of an element using the provided value.
///
/// @name set_height
/// @group Dimensions
/// @param {Length} $value - The height value to apply.
///
/// @example scss - Usage
///   .box {
///     @include set_height(200px);
///   }
///
@mixin set_height($value) {
    @include q($value, height);
}

// TYPOGRAPHY
// ----------------------------------------------------------------------------

///
/// Sets the font size of an element using the provided value.
///
/// @name set_font-size
/// @group Typography
/// @param {Length} $value - The font size value to apply.
///
/// @example scss - Usage
///   .text {
///     @include set_font-size(16px);
///   }
///
@mixin set_font-size($value) {
    @include q($value, font-size);
}

///
/// Sets the line height of an element using the provided value.
///
/// @name set_line_height
/// @group Typography
/// @param {Length} $value - The line height value to apply.
///
/// @example scss - Usage
///   .text {
///     @include set_line_height(1.5);
///   }
///
@mixin set_line_height($value) {
    @include q($value, line_height);
}

///
/// Sets the letter spacing of an element using the provided value.
/// @name set_letter-spacing
///
/// @group Typography
/// @param {Length} $value - The letter spacing value to apply.
///
/// @example scss - Usage
///   .text {
///     @include set_letter-spacing(0.1em);
///   }
///
@mixin set_letter-spacing($value) {
    @include q($value, letter-spacing);
}

// BORDERS
// ----------------------------------------------------------------------------

///
/// Sets the border width of an element using the provided value.
///
/// @name set_border_width
/// @group Borders
/// @param {Length} $value - The border width value to apply.
///
/// @example scss - Usage
///   .box {
///     @include set_border_width(2px);
///   }
///
@mixin set_border_width($value) {
    @include q($value, border_width);
}

///
/// Sets the border radius of an element using the provided value.
///
/// @name set_border_radius
/// @group Borders
/// @param {Length} $value - The border radius value to apply.
///
/// @example scss - Usage
///   .box {
///     @include set_border_radius(8px);
///   }
///
@mixin set_border_radius($value) {
    @include q($value, border_radius);
}

// PADDING
// ----------------------------------------------------------------------------

///
/// Sets the padding of an element using the provided value.
///
/// @name set_padding
/// @group Spacing
/// @param {Length} $value - The padding value to apply.
///
/// @example scss - Usage
///   .box {
///     @include set_padding(10px);
///   }
///
@mixin set_padding($value) {
    @include q($value, padding);
}

///
/// Sets the top padding of an element using the provided value.
///
/// @name set_padding_top
/// @group Spacing
/// @param {Length} $value - The padding_top value to apply.
///
/// @example scss - Usage
///   .box {
///     @include set_padding_top(10px);
///   }
///
@mixin set_padding_top($value) {
    @include q($value, padding_top);
}

///
/// Sets the right padding of an element using the provided value.
///
/// @name set_padding_right
/// @group Spacing
/// @param {Length} $value - The padding_right value to apply.
///
/// @example scss - Usage
///   .box {
///     @include set_padding_right(10px);
///   }
///
@mixin set_padding_right($value) {
    @include q($value, padding_right);
}

///
/// Sets the bottom padding of an element using the provided value.
///
/// @name set_padding_bottom
/// @group Spacing
/// @param {Length} $value - The padding_bottom value to apply.
///
/// @example scss - Usage
///   .box {
///     @include set_padding_bottom(10px);
///   }
///
@mixin set_padding_bottom($value) {
    @include q($value, padding_bottom);
}

///
/// Sets the left padding of an element using the provided value.
///
/// @name set_padding_left
/// @group Spacing
/// @param {Length} $value - The padding_left value to apply.
///
/// @example scss - Usage
///   .box {
///     @include set_padding_left(10px);
///   }
///
@mixin set_padding_left($value) {
    @include q($value, padding_left);
}

// MARGIN
// ----------------------------------------------------------------------------

///
/// Sets the margin of an element using the provided value.
///
/// @name set_margin
/// @group Spacing
/// @param {Length} $value - The margin value to apply.
///
/// @example scss - Usage
///   .box {
///     @include set_margin(10px);
///   }
///
@mixin set_margin($value) {
    @include q($value, margin);
}

///
/// Sets the top margin of an element using the provided value.
///
/// @name set_margin_top
/// @group Spacing
/// @param {Length} $value - The margin_top value to apply.
///
/// @example scss - Usage
///   .box {
///     @include set_margin_top(10px);
///   }
///
@mixin set_margin_top($value) {
    @include q($value, margin_top);
}

///
/// Sets the right margin of an element using the provided value.
///
/// @name set_margin_right
/// @group Spacing
/// @param {Length} $value - The margin_right value to apply.
///
/// @example scss - Usage
///   .box {
///     @include set_margin_right(10px);
///   }
///
@mixin set_margin_right($value) {
    @include q($value, margin_right);
}

///
/// Sets the bottom margin of an element using the provided value.
///
/// @name set_margin_bottom
/// @group Spacing
/// @param {Length} $value - The margin_bottom value to apply.
///
/// @example scss - Usage
///   .box {
///     @include set_margin_bottom(10px);
///   }
///
@mixin set_margin_bottom($value) {
    @include q($value, margin_bottom);
}

///
/// Sets the left margin of an element using the provided value.
///
/// @name set_margin_left
/// @group Spacing
/// @param {Length} $value - The margin_left value to apply.
///
/// @example scss - Usage
///     .box {
///         @include set_margin_left(10px);
///     }
///
@mixin set_margin_left($value) {
    @include q($value, margin_left);
}
