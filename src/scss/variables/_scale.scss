// ============================================================================
// Poster
// ============================================================================

////
///
/// Scale Variables Module
/// ===========================================================================
///
/// This module defines the base typographic and spacing scales used throughout
/// the project, leveraging a rhythm-based approach for consistent vertical
/// spacing and typographic hierarchy. The Kyū Point and Baseline scales
/// provide a flexible system for responsive design.
///
/// @group Scale
/// @author Scape Agency
/// @link https://unit.gl
/// @since 0.1.0 initial release
/// @todo None
/// @requires "unit" - module for unit conversion and scaling functions.
/// @access public
///
////


// ============================================================================
// Use
// ============================================================================

@use 'unit' as *;

// ============================================================================
// Variables
// ============================================================================

///
/// The base rhythm unit used for vertical spacing and typography.
///
/// @name $rhythm_base
/// @type Length
///
$rhythm_base: $q * 4 !default;

///
/// The ratio of line height to font size, defining the line height.
///
/// @name $line_height_ratio
/// @type Number
///
$line_height_ratio: 1.5 !default;

///
/// A scalar to define the base font size relative to the rhythm base.
///
/// @name $font_size_scalar
/// @type Number
///
$font_size_scalar: 4 !default;

///
/// A scalar to define the base line height, calculated from the line height
/// ratio and font size scalar.
///
/// @name $line_height_scalar
/// @type Length
///
$line_height_scalar: calc($line_height_ratio * $font_size_scalar) !default;

///
/// The base font size, calculated as a multiple of the rhythm base.
///
/// @name $font_size_base
/// @type Length
///
$font_size_base: calc($font_size_scalar * $rhythm_base) !default;

///
/// The base line height, calculated from the line height scalar and rhythm
/// base.
///
/// @name $line_height_base
/// @type Length
///
$line_height_base: calc($line_height_scalar * $rhythm_base) !default;

///
/// Typographic Scale Map
/// ---------------------------------------------------------------------------
///
/// A modular scale for typography, based on rhythm units. Each step in the
/// scale is a multiple of the rhythm base.
///
/// @name $typographic_scale
/// @type Map
///
$typographic_scale: (
    1: q(4),
    2: q(6),
    // +2 units
    3: q(8),
    // +2 units
    4: q(10),
    // +2 units
    5: q(12),
    // +2 units
    6: q(14),
    // +2 units
    7: q(16),
    // +2 units
    8: q(20),
    // +4 units
    9: q(24),
    // +4 units
    10: q(28),
    // +4 units
    11: q(32),
    // +4 units
    12: q(36),
    // +4 units
    13: q(40),
    // +4 units
    14: q(48),
    // +8 units
    15: q(56),
    // +8 units
    16: q(64),
    // +8 units
    17: q(72), // +8 units
) !default;

///
///  Kyū Point Scale
/// ---------------------------------------------------------------------------
///
/// The base scaling factor for the Kyū point scale.
///
/// @name $basepoint_scale
/// @type Number
///
$basepoint_scale: 4 !default;

///
/// Calculates a Kyū point value based on the basepoint scale.
///
/// @name basepoint
/// @param {Number} $value - The multiplier to apply to the base point scale.
/// @return {Length} The calculated Kyū point value.
///
@function basepoint($value) {
    @return calc($q * $value * $basepoint_scale);
}

///
/// A scale of Kyū points, used for fine-tuned spacing and sizing.
///
/// @name $basepoint
/// @type Map
///
$basepoint: (
    1: basepoint(1),
    2: basepoint(2),
    3: basepoint(3),
    4: basepoint(4),
    5: basepoint(5),
    6: basepoint(6),
    7: basepoint(7),
    8: basepoint(8),
    9: basepoint(9),
    10: basepoint(10),
    11: basepoint(11),
    12: basepoint(12),
) !default;

///
/// Kyū Baseline Scale
/// ---------------------------------------------------------------------------
///
/// The base scaling factor for the Kyū baseline grid.
///
/// @name $baseline_scale
/// @type Number
///
$baseline_scale: 5 !default;

///
/// Calculates a baseline grid value based on the baseline scale.
///
/// @name baseline
/// @type Function
/// @param {Number} $value - The multiplier to apply to the baseline scale.
/// @return {Length} The calculated baseline grid value.
///
@function baseline($value) {
    @return calc($q * $value * $baseline_scale);
}

///
/// A scale for the baseline grid, used for consistent vertical rhythm in
/// layouts.
///
/// @name $baseline
/// @type Map
///
$baseline: (
    1: baseline(1),
    2: baseline(2),
    3: baseline(3),
    4: baseline(4),
    5: baseline(5),
    6: baseline(6),
    7: baseline(7),
    8: baseline(8),
    9: baseline(9),
    10: baseline(10),
    11: baseline(11),
    12: baseline(12),
) !default;

///
/// Musical Scales Map
/// ---------------------------------------------------------------------------
///
/// A map representing various musical scales by their degree.
/// These scales can be used to inform design decisions, such as rhythm-based
/// spacing or modular scale ratios in typography.
///
/// @name scale_musical
/// @type Map
///
$scale_musical: (
    'monotonic': 1,
    // Single tone scale
    'ditonic': 2,
    // Two-tone scale
    'tritonic': 3,
    // Three-tone scale
    'tetratonic': 4,
    // Four-tone scale
    'pentatonic': 5,
    // Five-tone scale, commonly used in music
    'hexatonic': 6,
    // Six-tone scale
    'peptatonic': 7,
    // Seven-tone scale
    'octatonic': 8,
    // Eight-tone scale
    'nonatonic': 9,
    // Nine-tone scale
    'dodecatonic': 12, // Twelve-tone scale, covers all semitones in an octave
) !default;

/// Classic Typographic Scale
/// ---------------------------------------------------------------------------
///
/// A classic typographic scale that has historical significance,
/// often used in design software and by typographers since the Renaissance.
/// This scale ensures harmonious and aesthetically pleasing text sizing.
///
/// @name typographic_scale_classic
/// @type Map
///
$typographic_scale_classic: (
    1: q(6),
    // 6q
    2: q(7),
    // 7q  (+1)
    3: q(8),
    // 8q  (+1)
    4: q(9),
    // 9q  (+1)
    5: q(10),
    // 10q (+1)
    6: q(11),
    // 11q (+1)
    7: q(12),
    // 12q (+1)
    8: q(14),
    // 14q (+2)
    9: q(16),
    // 16q (+2)
    10: q(18),
    // 18q (+2)
    11: q(21),
    // 21q (+3)
    12: q(24),
    // 24q (+3)
    13: q(36),
    // 36q (+12)
    14: q(48),
    // 48q (+12)
    15: q(60),
    // 60q (+12)
    16: q(72),
    // 72q (+12)
    17: q(84),
    // 84q (+12)
    18: q(96), // 96q (+12)
) !default;
